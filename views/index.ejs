<!-- index.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Services Checkout</title>

  <meta http-equiv="Content-Security-Policy" content="
  default-src 'self' https://www.paypal.com https://*.paypal.com;
  script-src 'self' 'nonce-<%= nonce %>' 'strict-dynamic' https://www.paypal.com https://*.paypal.com;
  style-src 'self' https://fonts.googleapis.com 'unsafe-inline';
  img-src 'self' data: https://www.paypalobjects.com;
  frame-src 'self' https://www.paypal.com https://*.paypal.com https://www.sandbox.paypal.com;
  connect-src 'self' https://www.paypal.com https://*.paypal.com https://www.sandbox.paypal.com;
  upgrade-insecure-requests;">

  <link rel="stylesheet" href="/styles.css">
  <script nonce="<%= nonce %>">
    // ... (other functions remain the same)
  
    function attachBuyButtonHandlers() {
      document.querySelectorAll(".buy-btn").forEach(button => {
        button.addEventListener("click", async function () {
          const serviceName = this.getAttribute("data-service");
          const validService = await validateService(serviceName);
  
          if (!validService) return;
  
          // Find the closest service card and its PayPal container
          const serviceCard = this.closest(".service-card");
          const container = serviceCard.querySelector(".paypal-button-container");
  
          // Hide any other visible PayPal containers if needed
          document.querySelectorAll(".paypal-button-container").forEach(el => el.style.display = "none");
  
          container.style.display = "block";
          renderPayPalButton(validService, container);
        });
      });
    }
  
    function renderPayPalButton(service, container) {
      // Clear any existing content in the container
      container.innerHTML = "";
  
      paypal.Buttons({
        createOrder: async function (data, actions) {
          return actions.order.create({
            purchase_units: [{
              amount: { currency_code: "USD", value: service.price },
              description: service.name
            }]
          });
        },
        onApprove: function (data, actions) {
          return actions.order.capture().then(function (details) {
            alert("Transaction successful! " + details.payer.name.given_name);
  
            const transactionData = {
              transaction_id: details.id,
              payer_name: details.payer.name.given_name,
              payer_email: details.payer.email_address,
              amount: service.price,
              currency: "USD",
              payment_status: details.status,
              service_type: service.name
            };
  
            fetch("/save-transaction", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify(transactionData)
            })
              .then(response => response.json())
              .then(data => {
                if (data.success) {
                  alert("Transaction saved in the database!");
                } else {
                  alert("Transaction successful, but error saving.");
                }
              })
              .catch(err => console.error("Error saving transaction:", err));
  
            // Hide the button container after the transaction
            container.style.display = "none";
          });
        }
      }).render(container);
    }
  
    // Existing DOMContentLoaded listeners remain unchanged
    document.addEventListener("DOMContentLoaded", fetchServicePrices);
    document.addEventListener("DOMContentLoaded", attachBuyButtonHandlers);
    // ... (rest of your script)
  </script>
  

</head>
<body>
  <h2>Select a Service</h2>
  <div class="services-container">
    <div class="service-card" data-name="Basic Service" data-price="10">
      <h3>Basic Service</h3>
      <p id="price-basic">Price: $100</p>
      <button class="buy-btn" data-service="Basic Service">Buy Now</button>
      <!-- Each card gets its own PayPal container -->
      <div class="paypal-button-container" id="paypal-button-container-basic" style="display: none;"></div>
    </div>
    <div class="service-card" data-name="Premium Service" data-price="20">
      <h3>Premium Service</h3>
      <p id="price-premium">Price: $200</p>
      <button class="buy-btn" data-service="Premium Service">Buy Now</button>
      <div class="paypal-button-container" id="paypal-button-container-premium" style="display: none;"></div>
    </div>
    <div class="service-card" data-name="Enterprise Service" data-price="300">
      <h3>Enterprise Service</h3>
      <p id="price-enterprise">Price: $300</p>
      <button class="buy-btn" data-service="Enterprise Service">Buy Now</button>
      <div class="paypal-button-container" id="paypal-button-container-enterprise" style="display: none;"></div>
    </div>
  </div>
  
</body>
</html>